// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Viebal.ECommerce.Course.OAuth.Infrastructure.Data;

#nullable disable

namespace Viebal.ECommerce.Course.OAuth.Infrastructure.Data.Migrations.Courses
{
    [DbContext(typeof(CourseDbContext))]
    [Migration("20250608042627_CourseDbInitialization")]
    partial class CourseDbInitialization
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoursesLesson", b =>
                {
                    b.Property<Guid>("CoursesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LessonsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CoursesId", "LessonsId");

                    b.HasIndex("LessonsId");

                    b.ToTable("CoursesLesson");
                });

            modelBuilder.Entity("Viebal.ECommerce.Course.OAuth.Domain.Entities.Courses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.PrimitiveCollection<string>("CareerIDs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DurationText")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Features")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("GroupIDs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Prerequisites")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentsCount")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.PrimitiveCollection<string>("Topics")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalLessons")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Viebal.ECommerce.Course.OAuth.Domain.Entities.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("CoursesLesson", b =>
                {
                    b.HasOne("Viebal.ECommerce.Course.OAuth.Domain.Entities.Courses", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Viebal.ECommerce.Course.OAuth.Domain.Entities.Lesson", null)
                        .WithMany()
                        .HasForeignKey("LessonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Viebal.ECommerce.Course.OAuth.Domain.Entities.Courses", b =>
                {
                    b.OwnsOne("Viebal.ECommerce.Course.OAuth.Domain.ValueObjects.Duration", "TotalDuration", b1 =>
                        {
                            b1.Property<Guid>("CoursesId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("Days")
                                .HasColumnType("int")
                                .HasColumnName("TotalDays");

                            b1.Property<int?>("Hours")
                                .HasColumnType("int")
                                .HasColumnName("TotalHours");

                            b1.Property<int?>("Minutes")
                                .HasColumnType("int")
                                .HasColumnName("TotalMinutes");

                            b1.HasKey("CoursesId");

                            b1.ToTable("Courses");

                            b1.ToJson("TotalDuration");

                            b1.WithOwner()
                                .HasForeignKey("CoursesId");
                        });

                    b.Navigation("TotalDuration");
                });

            modelBuilder.Entity("Viebal.ECommerce.Course.OAuth.Domain.Entities.Lesson", b =>
                {
                    b.OwnsOne("Viebal.ECommerce.Course.OAuth.Domain.ValueObjects.Duration", "Duration", b1 =>
                        {
                            b1.Property<Guid>("LessonId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("Days")
                                .HasColumnType("int");

                            b1.Property<int?>("Hours")
                                .HasColumnType("int");

                            b1.Property<int?>("Minutes")
                                .HasColumnType("int");

                            b1.HasKey("LessonId");

                            b1.ToTable("Lessons");

                            b1.ToJson("Duration");

                            b1.WithOwner()
                                .HasForeignKey("LessonId");
                        });

                    b.Navigation("Duration");
                });
#pragma warning restore 612, 618
        }
    }
}
